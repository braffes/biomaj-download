name: Lint, test and publish

on: ["push"]

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: 3.8
    - name: Install Flake8
      run: |
        pip install flake8
    - name: Flake8
      run: flake8 --ignore=E501,W504 biomaj_download/*.py biomaj_download/download
    - name: Install Protoc
      uses: arduino/setup-protoc@v3
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Check that protobuf-compiler has been run
      run: |
        cd biomaj_download/message
        protoc --python_out=. downmessage.proto
        git status --porcelain
        git diff
        if [[ `git status --porcelain` ]]; then
          echo "Protobuf-compiler has not been run, please do it and commit the modifed python files"
          exit 1
        fi

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: 3.8
    - name: Install requirements
      run: |
        sudo apt update
        sudo apt install libcurl4-openssl-dev libssl-dev
        pip install pytest
        python setup.py install
    - name: Run tests
      run: |
        LOCAL_IRODS=0 NETWORK=0 pytest -v tests/biomaj_tests.py

  pkg_build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: 3.8
    - name: Check that the package build works
      run: |
        pip install -U pip setuptools build
        python -m build --sdist --wheel --outdir dist/ .

  pypi:
    runs-on: ubuntu-latest
    needs: [lint, test, pkg_build]
    name: Deploy release to Pypi
    environment:
      name: release
      url: https://pypi.org/p/biomaj-download
    permissions:
      id-token: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: 3.8
    - name: Python install
      run: pip install -U pip setuptools build
    - name: Build a binary wheel and a source tarball
      run: python -m build --sdist --wheel --outdir dist/ .
    - name: Publish distribution ðŸ“¦ to PyPI
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.pypi_password }}
